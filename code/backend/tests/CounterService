{
	"info": {
		"_postman_id": "1bf05eec-9811-4228-98f2-e2904ba32108",
		"name": "counterService",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "http://localhost:3001/api/counterservices",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "7a41a116-d748-4bc3-8f7d-0eead7602297",
						"exec": [
							"function sendRequest(req) {\r",
							"    return new Promise((resolve, reject) => {\r",
							"        pm.sendRequest(req, (err, res) => {\r",
							"            if (err) {\r",
							"                return reject(err);\r",
							"            }\r",
							"            return resolve(res);\r",
							"        })\r",
							"    });\r",
							"}\r",
							"\r",
							"(async function main() {\r",
							"    const result = await sendRequest('http://localhost:3001/test');\r",
							"    console.log('result:', result.code);\r",
							"})();"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "6da186b7-a915-40fe-8317-0a0841d2a779",
						"exec": [
							"pm.test(\"Status code of POST /Counterservices\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body of /services\", function () {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson).to.have.all.keys(\"serviceId\", \"serviceName\", \"serviceTime\",);\r",
							"    pm.expect(responseJson[\"serviceId\"]).to.eql(5);\r",
							"    pm.expect(responseJson[\"serviceName\"]).to.eql(\"foo\");\r",
							"    pm.expect(responseJson[\"serviceTime\"]).to.eql(4000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"service\": {\"serviceId\": 5, \"serviceName\": \"foo\", \"serviceTime\": 4000}, \"counter\": {\"counterId\": 6}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:3001/api/counterservices"
			},
			"response": []
		},
		{
			"name": "http://localhost:3001/api/counterservices",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "757d7579-e16e-444f-8885-4d5fdfd55b74",
						"exec": [
							"function sendRequest(req) {\r",
							"    return new Promise((resolve, reject) => {\r",
							"        pm.sendRequest(req, (err, res) => {\r",
							"            if (err) {\r",
							"                return reject(err);\r",
							"            }\r",
							"            return resolve(res);\r",
							"        })\r",
							"    });\r",
							"}\r",
							"\r",
							"(async function main() {\r",
							"    const result = await sendRequest('http://localhost:3001/test');\r",
							"    console.log('result:', result.code);\r",
							"})();"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "80ba8ec1-d2e6-4e96-a9a2-7b188b2f4329",
						"exec": [
							"pm.test(\"Status code of delete/counterService\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response body of delete /counterServices\", function () {\r",
							"    var jsonData = pm.response.json(\"serviceId\",\"counterId\");\r",
							"    pm.expect(jsonData.value).to.eql(1);\r",
							"     pm.expect(jsonData.value).to.eql(2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"service\": {\"serviceId\": 1, \"serviceName\": \"foo\", \"serviceTime\": 4000}, \"counter\": {\"counterId\": 1}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:3001/api/counterservices",
				"description": "delete"
			},
			"response": []
		},
		{
			"name": "http://localhost:3001/api/services/:serviceId",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "87b6c29c-8013-4418-bf4e-563d654a4e31",
						"exec": [
							"function sendRequest(req) {\r",
							"    return new Promise((resolve, reject) => {\r",
							"        pm.sendRequest(req, (err, res) => {\r",
							"            if (err) {\r",
							"                return reject(err);\r",
							"            }\r",
							"            return resolve(res);\r",
							"        })\r",
							"    });\r",
							"}\r",
							"\r",
							"(async function main() {\r",
							"    const result = await sendRequest('http://localhost:3001/test');\r",
							"    console.log('result:', result.code);\r",
							"})();"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "354fd845-3151-4f4e-9ece-61ece84dda6d",
						"exec": [
							"pm.test(\"Status code of Delete /services\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body of /services\", function () {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson).to.have.all.keys(\"serviceId\");\r",
							"    pm.expect(responseJson[\"serviceId\"]).gt(0);\r",
							"    \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\"serviceId\": 5, \"serviceName\": \"foo\", \"serviceTime\": 4000}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/api/services/:serviceId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"api",
						"services",
						":serviceId"
					],
					"variable": [
						{
							"key": "serviceId",
							"value": ""
						}
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}